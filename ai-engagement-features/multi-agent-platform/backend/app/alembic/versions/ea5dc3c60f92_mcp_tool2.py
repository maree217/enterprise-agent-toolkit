"""mcp tool2

Revision ID: ea5dc3c60f92
Revises: 6549012a1e46
Create Date: 2025-07-25 14:12:31.934481

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ea5dc3c60f92"
down_revision = "6549012a1e46"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("skill")
    op.add_column("tool", sa.Column("owner_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "tool", "user", ["owner_id"], ["id"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "tool", type_="foreignkey")
    op.drop_column("tool", "owner_id")
    op.create_table(
        "skill",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("display_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("managed", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "tool_definition",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "input_parameters",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "credentials",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("owner_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("resource_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["user.id"], name=op.f("skill_owner_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["resource_id"], ["resource.id"], name=op.f("skill_resource_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("skill_pkey")),
    )
    # ### end Alembic commands ###
