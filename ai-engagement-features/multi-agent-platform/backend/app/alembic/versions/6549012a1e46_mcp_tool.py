"""mcp tool

Revision ID: 6549012a1e46
Revises: 1344a1718e96
Create Date: 2025-07-25 13:32:10.407756

"""

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "6549012a1e46"
down_revision = "1344a1718e96"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "toolprovider",
        sa.Column(
            "provider_name", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False
        ),
        sa.Column(
            "mcp_endpoint_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("mcp_server_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "mcp_connection_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("icon", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "description", sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True
        ),
        sa.Column(
            "credentials", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("is_available", sa.Boolean(), nullable=True),
        sa.Column(
            "tool_type",
            sa.Enum("BUILTIN", "API", "MCP", name="tooltype"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "display_name", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("mcp_endpoint_url"),
        sa.UniqueConstraint("mcp_server_id"),
    )
    op.create_table(
        "tool",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column(
            "description", sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True
        ),
        sa.Column(
            "display_name", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True
        ),
        sa.Column("managed", sa.Boolean(), nullable=False),
        sa.Column(
            "tool_definition", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "input_parameters", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("provider_id", sa.Integer(), nullable=False),
        sa.Column("is_online", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["provider_id"],
            ["toolprovider.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "memberskillslink", sa.Column("tool_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint(
        op.f("memberskillslink_skill_id_fkey"), "memberskillslink", type_="foreignkey"
    )
    op.create_foreign_key(None, "memberskillslink", "tool", ["tool_id"], ["id"])
    op.drop_column("memberskillslink", "skill_id")
    op.add_column(
        "modelprovider", sa.Column("is_available", sa.Boolean(), nullable=True)
    )
    op.add_column("models", sa.Column("is_online", sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("models", "is_online")
    op.drop_column("modelprovider", "is_available")
    op.add_column(
        "memberskillslink",
        sa.Column("skill_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "memberskillslink", type_="foreignkey")
    op.create_foreign_key(
        op.f("memberskillslink_skill_id_fkey"),
        "memberskillslink",
        "skill",
        ["skill_id"],
        ["id"],
    )
    op.drop_column("memberskillslink", "tool_id")
    op.drop_table("tool")
    op.drop_table("toolprovider")
    # ### end Alembic commands ###
