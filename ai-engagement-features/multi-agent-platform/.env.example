# Domain
# This would be set to the production domain with an env var on deployment
DOMAIN=localhost


API_URL=http://localhost:8000 
NEXT_PUBLIC_API_URL=http://localhost:8000

# API_URL=http://192.168.1.166:8000 
# NEXT_PUBLIC_API_URL=http://192.168.1.166:8000

USERNAME=admin
HASHED_PASSWORD=Pn_nchr4aJzuc8BG_XEhyEtW9Y1qiWsjbeGSuOLllOw # password=changethis

# Environment: local, staging, production
ENVIRONMENT=local

PROJECT_NAME=flock
STACK_NAME=flock
USER_AGENT=flock
# Backend
BACKEND_CORS_ORIGINS="http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://nextagifuture.com"
SECRET_KEY=Z3wJ7Y4x4zWtAcwirRcpUm0lmUU21w_tKLm4F1Bt6dE
FIRST_SUPERUSER=tqx@tqx.com
FIRST_SUPERUSER_PASSWORD=123456
USERS_OPEN_REGISTRATION=False
MAX_UPLOAD_SIZE=50_000_000
MAX_WORKERS=1 # Sets the number of processes


# Embedding model. See the list of supported models: https://qdrant.github.io/fastembed/examples/Supported_Models/
DENSE_EMBEDDING_MODEL=BAAI/bge-small-en-v1.5
SPARSE_EMBEDDING_MODEL=prithivida/Splade_PP_en_v1
FASTEMBED_CACHE_PATH = "./fastembed_cache"


# Emails
SMTP_HOST=
SMTP_USER=
SMTP_PASSWORD=
EMAILS_FROM_EMAIL=info@example.com
SMTP_TLS=True
SMTP_SSL=False
SMTP_PORT=587

# Postgres
POSTGRES_SERVER=localhost
# POSTGRES_SERVER=db
POSTGRES_PORT=5433
POSTGRES_DB=flock
POSTGRES_USER=postgres
POSTGRES_PASSWORD=flock123456

SENTRY_DSN=


# Qdrant
QDRANT_SERVICE_API_KEY=XMj3HXm5GlBKQLwZuStOlkwZiOWTdd_IwZNDJINFh-w
QDRANT_URL = http://localhost:6333
QDRANT_COLLECTION= kb_uploads

# Celery
CELERY_BROKER_URL=redis://localhost:6380/0
CELERY_RESULT_BACKEND=redis://localhost:6380/0
    
# langsmith

LANGCHAIN_TRACING_V2=true
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com
LANGCHAIN_API_KEY=useyourownapikey
LANGCHAIN_PROJECT=changethis

# Controls LangGraph's recursion_limit configuration parameter. If empty, defaults to 25.
RECURSION_LIMIT=25

TAVILY_API_KEY=changethisifyouwanttousetavilyserch
SERPER_API_KEY =changethisifyouwanttouseserperapi

# Security  generate a key with this command
# from cryptography.fernet import Fernet
# key = Fernet.generate_key()
# print(key.decode()) 
MODEL_PROVIDER_ENCRYPTION_KEY=mp5Fosd0BwqJKYNXrJh5PTseO38z0zlmO3Vk_jphS3c=  #  Change this in production use your own key

